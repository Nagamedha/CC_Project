{
 "Resources": {
  "OmInsightsVpcF073D621": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "OmInsightsBaseInfraStack/OmInsightsVpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/OmInsightsVpc/Resource"
   }
  },
  "OmInsightsVpcPublicSubnetSubnet1SubnetEB2D00D2": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "OmInsightsVpcF073D621"
    },
    "AvailabilityZone": "us-east-1a",
    "CidrBlock": "10.0.0.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "PublicSubnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "OmInsightsBaseInfraStack/OmInsightsVpc/PublicSubnetSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/OmInsightsVpc/PublicSubnetSubnet1/Subnet"
   }
  },
  "OmInsightsVpcPublicSubnetSubnet1RouteTable09D67E18": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "OmInsightsVpcF073D621"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "OmInsightsBaseInfraStack/OmInsightsVpc/PublicSubnetSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/OmInsightsVpc/PublicSubnetSubnet1/RouteTable"
   }
  },
  "OmInsightsVpcPublicSubnetSubnet1RouteTableAssociationE0B5B38F": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "OmInsightsVpcPublicSubnetSubnet1RouteTable09D67E18"
    },
    "SubnetId": {
     "Ref": "OmInsightsVpcPublicSubnetSubnet1SubnetEB2D00D2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/OmInsightsVpc/PublicSubnetSubnet1/RouteTableAssociation"
   }
  },
  "OmInsightsVpcPublicSubnetSubnet1DefaultRoute17854935": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "OmInsightsVpcPublicSubnetSubnet1RouteTable09D67E18"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "OmInsightsVpcIGW6A541554"
    }
   },
   "DependsOn": [
    "OmInsightsVpcVPCGW0181D1E0"
   ],
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/OmInsightsVpc/PublicSubnetSubnet1/DefaultRoute"
   }
  },
  "OmInsightsVpcPublicSubnetSubnet2SubnetEDCC2A4D": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "OmInsightsVpcF073D621"
    },
    "AvailabilityZone": "us-east-1b",
    "CidrBlock": "10.0.1.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "PublicSubnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "OmInsightsBaseInfraStack/OmInsightsVpc/PublicSubnetSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/OmInsightsVpc/PublicSubnetSubnet2/Subnet"
   }
  },
  "OmInsightsVpcPublicSubnetSubnet2RouteTable3E6F9927": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "OmInsightsVpcF073D621"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "OmInsightsBaseInfraStack/OmInsightsVpc/PublicSubnetSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/OmInsightsVpc/PublicSubnetSubnet2/RouteTable"
   }
  },
  "OmInsightsVpcPublicSubnetSubnet2RouteTableAssociation9260BB5D": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "OmInsightsVpcPublicSubnetSubnet2RouteTable3E6F9927"
    },
    "SubnetId": {
     "Ref": "OmInsightsVpcPublicSubnetSubnet2SubnetEDCC2A4D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/OmInsightsVpc/PublicSubnetSubnet2/RouteTableAssociation"
   }
  },
  "OmInsightsVpcPublicSubnetSubnet2DefaultRoute9074EF20": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "OmInsightsVpcPublicSubnetSubnet2RouteTable3E6F9927"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "OmInsightsVpcIGW6A541554"
    }
   },
   "DependsOn": [
    "OmInsightsVpcVPCGW0181D1E0"
   ],
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/OmInsightsVpc/PublicSubnetSubnet2/DefaultRoute"
   }
  },
  "OmInsightsVpcPrivateSubnetSubnet1Subnet317F70B8": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "OmInsightsVpcF073D621"
    },
    "AvailabilityZone": "us-east-1a",
    "CidrBlock": "10.0.2.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "PrivateSubnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "OmInsightsBaseInfraStack/OmInsightsVpc/PrivateSubnetSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/OmInsightsVpc/PrivateSubnetSubnet1/Subnet"
   }
  },
  "OmInsightsVpcPrivateSubnetSubnet1RouteTableE1962851": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "OmInsightsVpcF073D621"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "OmInsightsBaseInfraStack/OmInsightsVpc/PrivateSubnetSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/OmInsightsVpc/PrivateSubnetSubnet1/RouteTable"
   }
  },
  "OmInsightsVpcPrivateSubnetSubnet1RouteTableAssociationA4CC8246": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "OmInsightsVpcPrivateSubnetSubnet1RouteTableE1962851"
    },
    "SubnetId": {
     "Ref": "OmInsightsVpcPrivateSubnetSubnet1Subnet317F70B8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/OmInsightsVpc/PrivateSubnetSubnet1/RouteTableAssociation"
   }
  },
  "OmInsightsVpcPrivateSubnetSubnet2Subnet1A061DE5": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "OmInsightsVpcF073D621"
    },
    "AvailabilityZone": "us-east-1b",
    "CidrBlock": "10.0.3.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "PrivateSubnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "OmInsightsBaseInfraStack/OmInsightsVpc/PrivateSubnetSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/OmInsightsVpc/PrivateSubnetSubnet2/Subnet"
   }
  },
  "OmInsightsVpcPrivateSubnetSubnet2RouteTable646B712E": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "OmInsightsVpcF073D621"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "OmInsightsBaseInfraStack/OmInsightsVpc/PrivateSubnetSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/OmInsightsVpc/PrivateSubnetSubnet2/RouteTable"
   }
  },
  "OmInsightsVpcPrivateSubnetSubnet2RouteTableAssociationB49D3871": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "OmInsightsVpcPrivateSubnetSubnet2RouteTable646B712E"
    },
    "SubnetId": {
     "Ref": "OmInsightsVpcPrivateSubnetSubnet2Subnet1A061DE5"
    }
   },
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/OmInsightsVpc/PrivateSubnetSubnet2/RouteTableAssociation"
   }
  },
  "OmInsightsVpcIGW6A541554": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "OmInsightsBaseInfraStack/OmInsightsVpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/OmInsightsVpc/IGW"
   }
  },
  "OmInsightsVpcVPCGW0181D1E0": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "VpcId": {
     "Ref": "OmInsightsVpcF073D621"
    },
    "InternetGatewayId": {
     "Ref": "OmInsightsVpcIGW6A541554"
    }
   },
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/OmInsightsVpc/VPCGW"
   }
  },
  "OmInsightsVpcS3Endpoint772C9A15": {
   "Type": "AWS::EC2::VPCEndpoint",
   "Properties": {
    "ServiceName": {
     "Fn::Join": [
      "",
      [
       "com.amazonaws.",
       {
        "Ref": "AWS::Region"
       },
       ".s3"
      ]
     ]
    },
    "VpcId": {
     "Ref": "OmInsightsVpcF073D621"
    },
    "RouteTableIds": [
     {
      "Ref": "OmInsightsVpcPrivateSubnetSubnet1RouteTableE1962851"
     },
     {
      "Ref": "OmInsightsVpcPrivateSubnetSubnet2RouteTable646B712E"
     },
     {
      "Ref": "OmInsightsVpcPublicSubnetSubnet1RouteTable09D67E18"
     },
     {
      "Ref": "OmInsightsVpcPublicSubnetSubnet2RouteTable3E6F9927"
     }
    ],
    "VpcEndpointType": "Gateway"
   },
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/OmInsightsVpc/S3Endpoint/Resource"
   }
  },
  "OmInsightsVpcDynamoDBEndpoint74C61F3C": {
   "Type": "AWS::EC2::VPCEndpoint",
   "Properties": {
    "ServiceName": {
     "Fn::Join": [
      "",
      [
       "com.amazonaws.",
       {
        "Ref": "AWS::Region"
       },
       ".dynamodb"
      ]
     ]
    },
    "VpcId": {
     "Ref": "OmInsightsVpcF073D621"
    },
    "RouteTableIds": [
     {
      "Ref": "OmInsightsVpcPrivateSubnetSubnet1RouteTableE1962851"
     },
     {
      "Ref": "OmInsightsVpcPrivateSubnetSubnet2RouteTable646B712E"
     },
     {
      "Ref": "OmInsightsVpcPublicSubnetSubnet1RouteTable09D67E18"
     },
     {
      "Ref": "OmInsightsVpcPublicSubnetSubnet2RouteTable3E6F9927"
     }
    ],
    "VpcEndpointType": "Gateway"
   },
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/OmInsightsVpc/DynamoDBEndpoint/Resource"
   }
  },
  "OmInsightsEFSE34F1AD5": {
   "Type": "AWS::EFS::FileSystem",
   "Properties": {
    "Encrypted": true,
    "FileSystemTags": [
     {
      "Key": "Name",
      "Value": "OmInsightsBaseInfraStack/OmInsightsEFS"
     }
    ],
    "LifecyclePolicies": [
     {
      "TransitionToIA": "AFTER_7_DAYS"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/OmInsightsEFS/Resource"
   }
  },
  "OmInsightsEFSEfsSecurityGroup524D8AB8": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "OmInsightsBaseInfraStack/OmInsightsEFS/EfsSecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "OmInsightsBaseInfraStack/OmInsightsEFS"
     }
    ],
    "VpcId": {
     "Ref": "OmInsightsVpcF073D621"
    }
   },
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/OmInsightsEFS/EfsSecurityGroup/Resource"
   }
  },
  "OmInsightsEFSEfsSecurityGroupfromOmInsightsBaseInfraStackLambdaEfsSecurityGroupBF02D9C12049E53C925F": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "from OmInsightsBaseInfraStackLambdaEfsSecurityGroupBF02D9C1:2049",
    "FromPort": 2049,
    "GroupId": {
     "Fn::GetAtt": [
      "OmInsightsEFSEfsSecurityGroup524D8AB8",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "LambdaEfsSecurityGroup587B1078",
      "GroupId"
     ]
    },
    "ToPort": 2049
   },
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/OmInsightsEFS/EfsSecurityGroup/from OmInsightsBaseInfraStackLambdaEfsSecurityGroupBF02D9C1:2049"
   }
  },
  "OmInsightsEFSEfsMountTarget16F8F9F3D": {
   "Type": "AWS::EFS::MountTarget",
   "Properties": {
    "FileSystemId": {
     "Ref": "OmInsightsEFSE34F1AD5"
    },
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "OmInsightsEFSEfsSecurityGroup524D8AB8",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "OmInsightsVpcPrivateSubnetSubnet1Subnet317F70B8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/OmInsightsEFS/EfsMountTarget1"
   }
  },
  "OmInsightsEFSEfsMountTarget2651F0DD0": {
   "Type": "AWS::EFS::MountTarget",
   "Properties": {
    "FileSystemId": {
     "Ref": "OmInsightsEFSE34F1AD5"
    },
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "OmInsightsEFSEfsSecurityGroup524D8AB8",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "OmInsightsVpcPrivateSubnetSubnet2Subnet1A061DE5"
    }
   },
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/OmInsightsEFS/EfsMountTarget2"
   }
  },
  "OmInsightsEFSOmInsightsEFSAccessPointDB985D49": {
   "Type": "AWS::EFS::AccessPoint",
   "Properties": {
    "FileSystemId": {
     "Ref": "OmInsightsEFSE34F1AD5"
    },
    "AccessPointTags": [
     {
      "Key": "Name",
      "Value": "OmInsightsBaseInfraStack/OmInsightsEFS/OmInsightsEFSAccessPoint"
     }
    ],
    "PosixUser": {
     "Gid": "1001",
     "Uid": "1001"
    },
    "RootDirectory": {
     "CreationInfo": {
      "OwnerGid": "1001",
      "OwnerUid": "1001",
      "Permissions": "755"
     },
     "Path": "/models"
    }
   },
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/OmInsightsEFS/OmInsightsEFSAccessPoint/Resource"
   }
  },
  "LambdaEfsSecurityGroup587B1078": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for Lambda functions accessing EFS",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "OmInsightsVpcF073D621"
    }
   },
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/LambdaEfsSecurityGroup/Resource"
   }
  },
  "LambdaEfsSecurityGroupfromOmInsightsBaseInfraStackLambdaEfsSecurityGroupBF02D9C144388E40DCF": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "Allow Lambda to communicate with OpenSearch over HTTPS",
    "FromPort": 443,
    "GroupId": {
     "Fn::GetAtt": [
      "LambdaEfsSecurityGroup587B1078",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "LambdaEfsSecurityGroup587B1078",
      "GroupId"
     ]
    },
    "ToPort": 443
   },
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/LambdaEfsSecurityGroup/from OmInsightsBaseInfraStackLambdaEfsSecurityGroupBF02D9C1:443"
   }
  },
  "ExistingFileBucketNotifications439E3C6D": {
   "Type": "Custom::S3BucketNotifications",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
      "Arn"
     ]
    },
    "BucketName": "om-insights-file-uploads-dev",
    "NotificationConfiguration": {
     "QueueConfigurations": [
      {
       "Events": [
        "s3:ObjectCreated:*"
       ],
       "Filter": {
        "Key": {
         "FilterRules": [
          {
           "Name": "prefix",
           "Value": "guntur/free/"
          }
         ]
        }
       },
       "QueueArn": {
        "Fn::GetAtt": [
         "gunturfreefileprocessingqueue013B758A",
         "Arn"
        ]
       }
      },
      {
       "Events": [
        "s3:ObjectCreated:*"
       ],
       "Filter": {
        "Key": {
         "FilterRules": [
          {
           "Name": "prefix",
           "Value": "guntur/basic/"
          }
         ]
        }
       },
       "QueueArn": {
        "Fn::GetAtt": [
         "gunturbasicfileprocessingqueueDD925984",
         "Arn"
        ]
       }
      },
      {
       "Events": [
        "s3:ObjectCreated:*"
       ],
       "Filter": {
        "Key": {
         "FilterRules": [
          {
           "Name": "prefix",
           "Value": "guntur/pro/"
          }
         ]
        }
       },
       "QueueArn": {
        "Fn::GetAtt": [
         "gunturprofileprocessingqueueD00D3A7B",
         "Arn"
        ]
       }
      },
      {
       "Events": [
        "s3:ObjectCreated:*"
       ],
       "Filter": {
        "Key": {
         "FilterRules": [
          {
           "Name": "prefix",
           "Value": "hyderabad/free/"
          }
         ]
        }
       },
       "QueueArn": {
        "Fn::GetAtt": [
         "hyderabadfreefileprocessingqueue3A00BCF4",
         "Arn"
        ]
       }
      },
      {
       "Events": [
        "s3:ObjectCreated:*"
       ],
       "Filter": {
        "Key": {
         "FilterRules": [
          {
           "Name": "prefix",
           "Value": "hyderabad/basic/"
          }
         ]
        }
       },
       "QueueArn": {
        "Fn::GetAtt": [
         "hyderabadbasicfileprocessingqueue9875EC22",
         "Arn"
        ]
       }
      },
      {
       "Events": [
        "s3:ObjectCreated:*"
       ],
       "Filter": {
        "Key": {
         "FilterRules": [
          {
           "Name": "prefix",
           "Value": "hyderabad/pro/"
          }
         ]
        }
       },
       "QueueArn": {
        "Fn::GetAtt": [
         "hyderabadprofileprocessingqueue7D5667DB",
         "Arn"
        ]
       }
      },
      {
       "Events": [
        "s3:ObjectCreated:*"
       ],
       "Filter": {
        "Key": {
         "FilterRules": [
          {
           "Name": "prefix",
           "Value": "vizag/free/"
          }
         ]
        }
       },
       "QueueArn": {
        "Fn::GetAtt": [
         "vizagfreefileprocessingqueueD0210276",
         "Arn"
        ]
       }
      },
      {
       "Events": [
        "s3:ObjectCreated:*"
       ],
       "Filter": {
        "Key": {
         "FilterRules": [
          {
           "Name": "prefix",
           "Value": "vizag/basic/"
          }
         ]
        }
       },
       "QueueArn": {
        "Fn::GetAtt": [
         "vizagbasicfileprocessingqueue4C9E4F98",
         "Arn"
        ]
       }
      },
      {
       "Events": [
        "s3:ObjectCreated:*"
       ],
       "Filter": {
        "Key": {
         "FilterRules": [
          {
           "Name": "prefix",
           "Value": "vizag/pro/"
          }
         ]
        }
       },
       "QueueArn": {
        "Fn::GetAtt": [
         "vizagprofileprocessingqueue5554C3DF",
         "Arn"
        ]
       }
      }
     ]
    },
    "Managed": false
   },
   "DependsOn": [
    "gunturbasicfileprocessingqueuePolicy1FF685A7",
    "gunturbasicfileprocessingqueueDD925984",
    "gunturfreefileprocessingqueuePolicyCFBF06A8",
    "gunturfreefileprocessingqueue013B758A",
    "gunturprofileprocessingqueuePolicyF20C9A79",
    "gunturprofileprocessingqueueD00D3A7B",
    "hyderabadbasicfileprocessingqueuePolicy216DEE28",
    "hyderabadbasicfileprocessingqueue9875EC22",
    "hyderabadfreefileprocessingqueuePolicy9CEBED07",
    "hyderabadfreefileprocessingqueue3A00BCF4",
    "hyderabadprofileprocessingqueuePolicy2459606B",
    "hyderabadprofileprocessingqueue7D5667DB",
    "vizagbasicfileprocessingqueuePolicy59DDB0F6",
    "vizagbasicfileprocessingqueue4C9E4F98",
    "vizagfreefileprocessingqueuePolicy05524A29",
    "vizagfreefileprocessingqueueD0210276",
    "vizagprofileprocessingqueuePolicy792DD94D",
    "vizagprofileprocessingqueue5554C3DF"
   ],
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/ExistingFileBucket/Notifications/Resource"
   }
  },
  "gunturfreefileprocessingqueueDLQ50A053F6": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "MessageRetentionPeriod": 604800,
    "QueueName": "guntur-free-file-processing-queue-DLQ"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/guntur-free-file-processing-queue-DLQ/Resource"
   }
  },
  "gunturfreefileprocessingqueue013B758A": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "MessageRetentionPeriod": 345600,
    "QueueName": "guntur-free-file-processing-queue",
    "RedrivePolicy": {
     "deadLetterTargetArn": {
      "Fn::GetAtt": [
       "gunturfreefileprocessingqueueDLQ50A053F6",
       "Arn"
      ]
     },
     "maxReceiveCount": 2
    },
    "VisibilityTimeout": 75
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/guntur-free-file-processing-queue/Resource"
   }
  },
  "gunturfreefileprocessingqueuePolicyCFBF06A8": {
   "Type": "AWS::SQS::QueuePolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sqs:SendMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl"
       ],
       "Condition": {
        "ArnLike": {
         "aws:SourceArn": {
          "Fn::Join": [
           "",
           [
            "arn:",
            {
             "Ref": "AWS::Partition"
            },
            ":s3:::om-insights-file-uploads-dev"
           ]
          ]
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "s3.amazonaws.com"
       },
       "Resource": {
        "Fn::GetAtt": [
         "gunturfreefileprocessingqueue013B758A",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Queues": [
     {
      "Ref": "gunturfreefileprocessingqueue013B758A"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/guntur-free-file-processing-queue/Policy/Resource"
   }
  },
  "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/Resource"
   }
  },
  "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:PutBucketNotification",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "s3:GetBucketNotification",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
    "Roles": [
     {
      "Ref": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy/Resource"
   }
  },
  "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Description": "AWS CloudFormation handler for \"Custom::S3BucketNotifications\" resources (@aws-cdk/aws-s3)",
    "Code": {
     "ZipFile": "import boto3  # type: ignore\nimport json\nimport logging\nimport urllib.request\n\ns3 = boto3.client(\"s3\")\n\nEVENTBRIDGE_CONFIGURATION = 'EventBridgeConfiguration'\n\nCONFIGURATION_TYPES = [\"TopicConfigurations\", \"QueueConfigurations\", \"LambdaFunctionConfigurations\"]\n\ndef handler(event: dict, context):\n  response_status = \"SUCCESS\"\n  error_message = \"\"\n  try:\n    props = event[\"ResourceProperties\"]\n    bucket = props[\"BucketName\"]\n    notification_configuration = props[\"NotificationConfiguration\"]\n    request_type = event[\"RequestType\"]\n    managed = props.get('Managed', 'true').lower() == 'true'\n    stack_id = event['StackId']\n\n    if managed:\n      config = handle_managed(request_type, notification_configuration)\n    else:\n      config = handle_unmanaged(bucket, stack_id, request_type, notification_configuration)\n\n    put_bucket_notification_configuration(bucket, config)\n  except Exception as e:\n    logging.exception(\"Failed to put bucket notification configuration\")\n    response_status = \"FAILED\"\n    error_message = f\"Error: {str(e)}. \"\n  finally:\n    submit_response(event, context, response_status, error_message)\n\ndef handle_managed(request_type, notification_configuration):\n  if request_type == 'Delete':\n    return {}\n  return notification_configuration\n\ndef handle_unmanaged(bucket, stack_id, request_type, notification_configuration):\n  external_notifications = find_external_notifications(bucket, stack_id)\n\n  if request_type == 'Delete':\n    return external_notifications\n\n  def with_id(notification):\n    notification['Id'] = f\"{stack_id}-{hash(json.dumps(notification, sort_keys=True))}\"\n    return notification\n\n  notifications = {}\n  for t in CONFIGURATION_TYPES:\n    external = external_notifications.get(t, [])\n    incoming = [with_id(n) for n in notification_configuration.get(t, [])]\n    notifications[t] = external + incoming\n\n  if EVENTBRIDGE_CONFIGURATION in notification_configuration:\n    notifications[EVENTBRIDGE_CONFIGURATION] = notification_configuration[EVENTBRIDGE_CONFIGURATION]\n  elif EVENTBRIDGE_CONFIGURATION in external_notifications:\n    notifications[EVENTBRIDGE_CONFIGURATION] = external_notifications[EVENTBRIDGE_CONFIGURATION]\n\n  return notifications\n\ndef find_external_notifications(bucket, stack_id):\n  existing_notifications = get_bucket_notification_configuration(bucket)\n  external_notifications = {}\n  for t in CONFIGURATION_TYPES:\n    external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'].startswith(f\"{stack_id}-\")]\n\n  if EVENTBRIDGE_CONFIGURATION in existing_notifications:\n    external_notifications[EVENTBRIDGE_CONFIGURATION] = existing_notifications[EVENTBRIDGE_CONFIGURATION]\n\n  return external_notifications\n\ndef get_bucket_notification_configuration(bucket):\n  return s3.get_bucket_notification_configuration(Bucket=bucket)\n\ndef put_bucket_notification_configuration(bucket, notification_configuration):\n  s3.put_bucket_notification_configuration(Bucket=bucket, NotificationConfiguration=notification_configuration)\n\ndef submit_response(event: dict, context, response_status: str, error_message: str):\n  response_body = json.dumps(\n    {\n      \"Status\": response_status,\n      \"Reason\": f\"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}\",\n      \"PhysicalResourceId\": event.get(\"PhysicalResourceId\") or event[\"LogicalResourceId\"],\n      \"StackId\": event[\"StackId\"],\n      \"RequestId\": event[\"RequestId\"],\n      \"LogicalResourceId\": event[\"LogicalResourceId\"],\n      \"NoEcho\": False,\n    }\n  ).encode(\"utf-8\")\n  headers = {\"content-type\": \"\", \"content-length\": str(len(response_body))}\n  try:\n    req = urllib.request.Request(url=event[\"ResponseURL\"], headers=headers, data=response_body, method=\"PUT\")\n    with urllib.request.urlopen(req) as response:\n      print(response.read().decode(\"utf-8\"))\n    print(\"Status code: \" + response.reason)\n  except Exception as e:\n      print(\"send(..) failed executing request.urlopen(..): \" + str(e))\n"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 300
   },
   "DependsOn": [
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
   ],
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource"
   }
  },
  "gunturbasicfileprocessingqueueDLQDBF91424": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "MessageRetentionPeriod": 604800,
    "QueueName": "guntur-basic-file-processing-queue-DLQ"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/guntur-basic-file-processing-queue-DLQ/Resource"
   }
  },
  "gunturbasicfileprocessingqueueDD925984": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "MessageRetentionPeriod": 345600,
    "QueueName": "guntur-basic-file-processing-queue",
    "RedrivePolicy": {
     "deadLetterTargetArn": {
      "Fn::GetAtt": [
       "gunturbasicfileprocessingqueueDLQDBF91424",
       "Arn"
      ]
     },
     "maxReceiveCount": 2
    },
    "VisibilityTimeout": 75
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/guntur-basic-file-processing-queue/Resource"
   }
  },
  "gunturbasicfileprocessingqueuePolicy1FF685A7": {
   "Type": "AWS::SQS::QueuePolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sqs:SendMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl"
       ],
       "Condition": {
        "ArnLike": {
         "aws:SourceArn": {
          "Fn::Join": [
           "",
           [
            "arn:",
            {
             "Ref": "AWS::Partition"
            },
            ":s3:::om-insights-file-uploads-dev"
           ]
          ]
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "s3.amazonaws.com"
       },
       "Resource": {
        "Fn::GetAtt": [
         "gunturbasicfileprocessingqueueDD925984",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Queues": [
     {
      "Ref": "gunturbasicfileprocessingqueueDD925984"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/guntur-basic-file-processing-queue/Policy/Resource"
   }
  },
  "gunturprofileprocessingqueueDLQ338ED69A": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "MessageRetentionPeriod": 604800,
    "QueueName": "guntur-pro-file-processing-queue-DLQ"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/guntur-pro-file-processing-queue-DLQ/Resource"
   }
  },
  "gunturprofileprocessingqueueD00D3A7B": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "MessageRetentionPeriod": 345600,
    "QueueName": "guntur-pro-file-processing-queue",
    "RedrivePolicy": {
     "deadLetterTargetArn": {
      "Fn::GetAtt": [
       "gunturprofileprocessingqueueDLQ338ED69A",
       "Arn"
      ]
     },
     "maxReceiveCount": 2
    },
    "VisibilityTimeout": 75
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/guntur-pro-file-processing-queue/Resource"
   }
  },
  "gunturprofileprocessingqueuePolicyF20C9A79": {
   "Type": "AWS::SQS::QueuePolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sqs:SendMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl"
       ],
       "Condition": {
        "ArnLike": {
         "aws:SourceArn": {
          "Fn::Join": [
           "",
           [
            "arn:",
            {
             "Ref": "AWS::Partition"
            },
            ":s3:::om-insights-file-uploads-dev"
           ]
          ]
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "s3.amazonaws.com"
       },
       "Resource": {
        "Fn::GetAtt": [
         "gunturprofileprocessingqueueD00D3A7B",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Queues": [
     {
      "Ref": "gunturprofileprocessingqueueD00D3A7B"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/guntur-pro-file-processing-queue/Policy/Resource"
   }
  },
  "hyderabadfreefileprocessingqueueDLQ09F29113": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "MessageRetentionPeriod": 604800,
    "QueueName": "hyderabad-free-file-processing-queue-DLQ"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/hyderabad-free-file-processing-queue-DLQ/Resource"
   }
  },
  "hyderabadfreefileprocessingqueue3A00BCF4": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "MessageRetentionPeriod": 345600,
    "QueueName": "hyderabad-free-file-processing-queue",
    "RedrivePolicy": {
     "deadLetterTargetArn": {
      "Fn::GetAtt": [
       "hyderabadfreefileprocessingqueueDLQ09F29113",
       "Arn"
      ]
     },
     "maxReceiveCount": 2
    },
    "VisibilityTimeout": 75
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/hyderabad-free-file-processing-queue/Resource"
   }
  },
  "hyderabadfreefileprocessingqueuePolicy9CEBED07": {
   "Type": "AWS::SQS::QueuePolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sqs:SendMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl"
       ],
       "Condition": {
        "ArnLike": {
         "aws:SourceArn": {
          "Fn::Join": [
           "",
           [
            "arn:",
            {
             "Ref": "AWS::Partition"
            },
            ":s3:::om-insights-file-uploads-dev"
           ]
          ]
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "s3.amazonaws.com"
       },
       "Resource": {
        "Fn::GetAtt": [
         "hyderabadfreefileprocessingqueue3A00BCF4",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Queues": [
     {
      "Ref": "hyderabadfreefileprocessingqueue3A00BCF4"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/hyderabad-free-file-processing-queue/Policy/Resource"
   }
  },
  "hyderabadbasicfileprocessingqueueDLQD9D44F58": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "MessageRetentionPeriod": 604800,
    "QueueName": "hyderabad-basic-file-processing-queue-DLQ"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/hyderabad-basic-file-processing-queue-DLQ/Resource"
   }
  },
  "hyderabadbasicfileprocessingqueue9875EC22": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "MessageRetentionPeriod": 345600,
    "QueueName": "hyderabad-basic-file-processing-queue",
    "RedrivePolicy": {
     "deadLetterTargetArn": {
      "Fn::GetAtt": [
       "hyderabadbasicfileprocessingqueueDLQD9D44F58",
       "Arn"
      ]
     },
     "maxReceiveCount": 2
    },
    "VisibilityTimeout": 75
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/hyderabad-basic-file-processing-queue/Resource"
   }
  },
  "hyderabadbasicfileprocessingqueuePolicy216DEE28": {
   "Type": "AWS::SQS::QueuePolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sqs:SendMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl"
       ],
       "Condition": {
        "ArnLike": {
         "aws:SourceArn": {
          "Fn::Join": [
           "",
           [
            "arn:",
            {
             "Ref": "AWS::Partition"
            },
            ":s3:::om-insights-file-uploads-dev"
           ]
          ]
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "s3.amazonaws.com"
       },
       "Resource": {
        "Fn::GetAtt": [
         "hyderabadbasicfileprocessingqueue9875EC22",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Queues": [
     {
      "Ref": "hyderabadbasicfileprocessingqueue9875EC22"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/hyderabad-basic-file-processing-queue/Policy/Resource"
   }
  },
  "hyderabadprofileprocessingqueueDLQ6773B660": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "MessageRetentionPeriod": 604800,
    "QueueName": "hyderabad-pro-file-processing-queue-DLQ"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/hyderabad-pro-file-processing-queue-DLQ/Resource"
   }
  },
  "hyderabadprofileprocessingqueue7D5667DB": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "MessageRetentionPeriod": 345600,
    "QueueName": "hyderabad-pro-file-processing-queue",
    "RedrivePolicy": {
     "deadLetterTargetArn": {
      "Fn::GetAtt": [
       "hyderabadprofileprocessingqueueDLQ6773B660",
       "Arn"
      ]
     },
     "maxReceiveCount": 2
    },
    "VisibilityTimeout": 75
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/hyderabad-pro-file-processing-queue/Resource"
   }
  },
  "hyderabadprofileprocessingqueuePolicy2459606B": {
   "Type": "AWS::SQS::QueuePolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sqs:SendMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl"
       ],
       "Condition": {
        "ArnLike": {
         "aws:SourceArn": {
          "Fn::Join": [
           "",
           [
            "arn:",
            {
             "Ref": "AWS::Partition"
            },
            ":s3:::om-insights-file-uploads-dev"
           ]
          ]
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "s3.amazonaws.com"
       },
       "Resource": {
        "Fn::GetAtt": [
         "hyderabadprofileprocessingqueue7D5667DB",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Queues": [
     {
      "Ref": "hyderabadprofileprocessingqueue7D5667DB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/hyderabad-pro-file-processing-queue/Policy/Resource"
   }
  },
  "vizagfreefileprocessingqueueDLQA996FCE9": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "MessageRetentionPeriod": 604800,
    "QueueName": "vizag-free-file-processing-queue-DLQ"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/vizag-free-file-processing-queue-DLQ/Resource"
   }
  },
  "vizagfreefileprocessingqueueD0210276": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "MessageRetentionPeriod": 345600,
    "QueueName": "vizag-free-file-processing-queue",
    "RedrivePolicy": {
     "deadLetterTargetArn": {
      "Fn::GetAtt": [
       "vizagfreefileprocessingqueueDLQA996FCE9",
       "Arn"
      ]
     },
     "maxReceiveCount": 2
    },
    "VisibilityTimeout": 75
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/vizag-free-file-processing-queue/Resource"
   }
  },
  "vizagfreefileprocessingqueuePolicy05524A29": {
   "Type": "AWS::SQS::QueuePolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sqs:SendMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl"
       ],
       "Condition": {
        "ArnLike": {
         "aws:SourceArn": {
          "Fn::Join": [
           "",
           [
            "arn:",
            {
             "Ref": "AWS::Partition"
            },
            ":s3:::om-insights-file-uploads-dev"
           ]
          ]
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "s3.amazonaws.com"
       },
       "Resource": {
        "Fn::GetAtt": [
         "vizagfreefileprocessingqueueD0210276",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Queues": [
     {
      "Ref": "vizagfreefileprocessingqueueD0210276"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/vizag-free-file-processing-queue/Policy/Resource"
   }
  },
  "vizagbasicfileprocessingqueueDLQ356752EA": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "MessageRetentionPeriod": 604800,
    "QueueName": "vizag-basic-file-processing-queue-DLQ"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/vizag-basic-file-processing-queue-DLQ/Resource"
   }
  },
  "vizagbasicfileprocessingqueue4C9E4F98": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "MessageRetentionPeriod": 345600,
    "QueueName": "vizag-basic-file-processing-queue",
    "RedrivePolicy": {
     "deadLetterTargetArn": {
      "Fn::GetAtt": [
       "vizagbasicfileprocessingqueueDLQ356752EA",
       "Arn"
      ]
     },
     "maxReceiveCount": 2
    },
    "VisibilityTimeout": 75
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/vizag-basic-file-processing-queue/Resource"
   }
  },
  "vizagbasicfileprocessingqueuePolicy59DDB0F6": {
   "Type": "AWS::SQS::QueuePolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sqs:SendMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl"
       ],
       "Condition": {
        "ArnLike": {
         "aws:SourceArn": {
          "Fn::Join": [
           "",
           [
            "arn:",
            {
             "Ref": "AWS::Partition"
            },
            ":s3:::om-insights-file-uploads-dev"
           ]
          ]
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "s3.amazonaws.com"
       },
       "Resource": {
        "Fn::GetAtt": [
         "vizagbasicfileprocessingqueue4C9E4F98",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Queues": [
     {
      "Ref": "vizagbasicfileprocessingqueue4C9E4F98"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/vizag-basic-file-processing-queue/Policy/Resource"
   }
  },
  "vizagprofileprocessingqueueDLQCA35A9D4": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "MessageRetentionPeriod": 604800,
    "QueueName": "vizag-pro-file-processing-queue-DLQ"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/vizag-pro-file-processing-queue-DLQ/Resource"
   }
  },
  "vizagprofileprocessingqueue5554C3DF": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "MessageRetentionPeriod": 345600,
    "QueueName": "vizag-pro-file-processing-queue",
    "RedrivePolicy": {
     "deadLetterTargetArn": {
      "Fn::GetAtt": [
       "vizagprofileprocessingqueueDLQCA35A9D4",
       "Arn"
      ]
     },
     "maxReceiveCount": 2
    },
    "VisibilityTimeout": 75
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/vizag-pro-file-processing-queue/Resource"
   }
  },
  "vizagprofileprocessingqueuePolicy792DD94D": {
   "Type": "AWS::SQS::QueuePolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sqs:SendMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl"
       ],
       "Condition": {
        "ArnLike": {
         "aws:SourceArn": {
          "Fn::Join": [
           "",
           [
            "arn:",
            {
             "Ref": "AWS::Partition"
            },
            ":s3:::om-insights-file-uploads-dev"
           ]
          ]
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "s3.amazonaws.com"
       },
       "Resource": {
        "Fn::GetAtt": [
         "vizagprofileprocessingqueue5554C3DF",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Queues": [
     {
      "Ref": "vizagprofileprocessingqueue5554C3DF"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/vizag-pro-file-processing-queue/Policy/Resource"
   }
  },
  "workerqueueDLQF572415E": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "MessageRetentionPeriod": 1209600,
    "QueueName": "om-insights-worker-queue-dev-dlq"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/worker-queueDLQ/Resource"
   }
  },
  "workerqueueQueueAD4DD13C": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "QueueName": "om-insights-worker-queue-dev",
    "RedrivePolicy": {
     "deadLetterTargetArn": {
      "Fn::GetAtt": [
       "workerqueueDLQF572415E",
       "Arn"
      ]
     },
     "maxReceiveCount": 2
    },
    "VisibilityTimeout": 300
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/worker-queueQueue/Resource"
   }
  },
  "inventoryqueueDLQ95BC56F8": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "MessageRetentionPeriod": 1209600,
    "QueueName": "om-insights-inventory-queue-dev-dlq"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/inventory-queueDLQ/Resource"
   }
  },
  "inventoryqueueQueue8D928AA8": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "QueueName": "om-insights-inventory-queue-dev",
    "RedrivePolicy": {
     "deadLetterTargetArn": {
      "Fn::GetAtt": [
       "inventoryqueueDLQ95BC56F8",
       "Arn"
      ]
     },
     "maxReceiveCount": 2
    },
    "VisibilityTimeout": 300
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/inventory-queueQueue/Resource"
   }
  },
  "marketingqueueDLQDAE6232A": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "MessageRetentionPeriod": 1209600,
    "QueueName": "om-insights-marketing-queue-dev-dlq"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/marketing-queueDLQ/Resource"
   }
  },
  "marketingqueueQueueA6E57B23": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "QueueName": "om-insights-marketing-queue-dev",
    "RedrivePolicy": {
     "deadLetterTargetArn": {
      "Fn::GetAtt": [
       "marketingqueueDLQDAE6232A",
       "Arn"
      ]
     },
     "maxReceiveCount": 2
    },
    "VisibilityTimeout": 300
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/marketing-queueQueue/Resource"
   }
  },
  "LambdaExecutionRoleD5C26073": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AWSLambda_FullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSSMFullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonS3FullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonDynamoDBFullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSQSFullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/CloudWatchFullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/CloudWatchLogsFullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AWSBatchFullAccess"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/LambdaExecutionRole/Resource"
   }
  },
  "LambdaExecutionRoleDefaultPolicy6D69732F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": "arn:aws:lambda:us-east-1:476114134948:function:*"
      },
      {
       "Action": [
        "elasticfilesystem:ClientMount",
        "elasticfilesystem:ClientWrite",
        "elasticfilesystem:ClientRootAccess"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "OmInsightsEFSE34F1AD5",
         "Arn"
        ]
       }
      },
      {
       "Action": "iam:PassRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "LambdaExecutionRoleD5C26073",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "aoss:APIAccessAll",
        "aoss:BatchGetCollection",
        "aoss:BatchGetIndex",
        "aoss:CreateIndex",
        "aoss:UpdateIndex",
        "aoss:DeleteIndex",
        "aoss:IngestDocuments",
        "aoss:Search"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "elasticfilesystem:ClientMount",
       "Condition": {
        "StringEquals": {
         "elasticfilesystem:AccessPointArn": {
          "Fn::Join": [
           "",
           [
            "arn:",
            {
             "Ref": "AWS::Partition"
            },
            ":elasticfilesystem:us-east-1:476114134948:access-point/",
            {
             "Ref": "OmInsightsEFSOmInsightsEFSAccessPointDB985D49"
            }
           ]
          ]
         }
        }
       },
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "elasticfilesystem:ClientWrite",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":elasticfilesystem:us-east-1:476114134948:file-system/",
          {
           "Ref": "OmInsightsEFSE34F1AD5"
          }
         ]
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:us-east-1:476114134948:table/om-insights-file-metadata"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::om-insights-file-uploads-dev"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::om-insights-file-uploads-dev/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "sqs:SendMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "workerqueueQueueAD4DD13C",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "sqs:SendMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "inventoryqueueQueue8D928AA8",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "sqs:SendMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "marketingqueueQueueA6E57B23",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "sqs:ReceiveMessage",
        "sqs:ChangeMessageVisibility",
        "sqs:GetQueueUrl",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "gunturfreefileprocessingqueue013B758A",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "sqs:ReceiveMessage",
        "sqs:ChangeMessageVisibility",
        "sqs:GetQueueUrl",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "gunturbasicfileprocessingqueueDD925984",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "sqs:ReceiveMessage",
        "sqs:ChangeMessageVisibility",
        "sqs:GetQueueUrl",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "gunturprofileprocessingqueueD00D3A7B",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "sqs:ReceiveMessage",
        "sqs:ChangeMessageVisibility",
        "sqs:GetQueueUrl",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "hyderabadfreefileprocessingqueue3A00BCF4",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "sqs:ReceiveMessage",
        "sqs:ChangeMessageVisibility",
        "sqs:GetQueueUrl",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "hyderabadbasicfileprocessingqueue9875EC22",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "sqs:ReceiveMessage",
        "sqs:ChangeMessageVisibility",
        "sqs:GetQueueUrl",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "hyderabadprofileprocessingqueue7D5667DB",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "sqs:ReceiveMessage",
        "sqs:ChangeMessageVisibility",
        "sqs:GetQueueUrl",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "vizagfreefileprocessingqueueD0210276",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "sqs:ReceiveMessage",
        "sqs:ChangeMessageVisibility",
        "sqs:GetQueueUrl",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "vizagbasicfileprocessingqueue4C9E4F98",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "sqs:ReceiveMessage",
        "sqs:ChangeMessageVisibility",
        "sqs:GetQueueUrl",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "vizagprofileprocessingqueue5554C3DF",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "sqs:ReceiveMessage",
        "sqs:ChangeMessageVisibility",
        "sqs:GetQueueUrl",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "workerqueueQueueAD4DD13C",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "sqs:ReceiveMessage",
        "sqs:ChangeMessageVisibility",
        "sqs:GetQueueUrl",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "inventoryqueueQueue8D928AA8",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "sqs:ReceiveMessage",
        "sqs:ChangeMessageVisibility",
        "sqs:GetQueueUrl",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "marketingqueueQueueA6E57B23",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LambdaExecutionRoleDefaultPolicy6D69732F",
    "Roles": [
     {
      "Ref": "LambdaExecutionRoleD5C26073"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/LambdaExecutionRole/DefaultPolicy/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/32RTU/DMAyGf8vuWUCbxMexm2DaAVHaaVeUet5m2iYldqiqqv8drS0rXLjEfh89iiNnoR/u9e3M1DyHQz4vKNNtKgZyZWp+bxEWut1XoNZHu4/XKg5ZQZCGzKJc2NQlLgjuTFbgxCcWMTsgI+TsVVaxpy8jON2xtYLeomyMYG2aceiYIhED5xKtqJHsK3iyh8qRlVG9xhQheJJm412o+gf9C7b25JG5U3hk3T5TgWnDguVF/JteXLCyM/6EoiIAZI5/5v+KneKlXgXIUVaGUfEn6/YtYOiXMzT9GbuCoLnCIXaKTKnbxA277Oskjk6nEmQXPPTOa5AqDP8w0k7FjZydvVnqR303+2CiuQ9WqESdDPUbCarqK/wBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "OmInsightsBaseInfraStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "EFSFileSystemId": {
   "Value": {
    "Ref": "OmInsightsEFSE34F1AD5"
   }
  },
  "EFSAccessPointId": {
   "Value": {
    "Ref": "OmInsightsEFSOmInsightsEFSAccessPointDB985D49"
   }
  },
  "LambdaSecurityGroupId": {
   "Value": {
    "Fn::GetAtt": [
     "LambdaEfsSecurityGroup587B1078",
     "GroupId"
    ]
   }
  },
  "workerqueueQueueName": {
   "Value": {
    "Fn::GetAtt": [
     "workerqueueQueueAD4DD13C",
     "QueueName"
    ]
   }
  },
  "workerqueueDLQName": {
   "Value": {
    "Fn::GetAtt": [
     "workerqueueDLQF572415E",
     "QueueName"
    ]
   }
  },
  "inventoryqueueQueueName": {
   "Value": {
    "Fn::GetAtt": [
     "inventoryqueueQueue8D928AA8",
     "QueueName"
    ]
   }
  },
  "inventoryqueueDLQName": {
   "Value": {
    "Fn::GetAtt": [
     "inventoryqueueDLQ95BC56F8",
     "QueueName"
    ]
   }
  },
  "marketingqueueQueueName": {
   "Value": {
    "Fn::GetAtt": [
     "marketingqueueQueueA6E57B23",
     "QueueName"
    ]
   }
  },
  "marketingqueueDLQName": {
   "Value": {
    "Fn::GetAtt": [
     "marketingqueueDLQDAE6232A",
     "QueueName"
    ]
   }
  },
  "DynamoDBTableStatus": {
   "Value": "Reusing existing table: om-insights-file-metadata"
  },
  "WorkerTableStatus": {
   "Value": "Reusing existing table: om-insights-worker-table"
  },
  "WorkerTableName": {
   "Value": "om-insights-worker-table"
  },
  "InventoryTableStatus": {
   "Value": "Reusing existing table: om-insights-inventory-table"
  },
  "InventoryTableName": {
   "Value": "om-insights-inventory-table"
  },
  "MarketingTableStatus": {
   "Value": "Reusing existing table: om-insights-marketing-table"
  },
  "MarketingTableName": {
   "Value": "om-insights-marketing-table"
  },
  "CustomerTableStatus": {
   "Value": "Reusing existing table: om-insights-customer-table"
  },
  "CustomerTableName": {
   "Value": "om-insights-customer-table"
  },
  "BucketName": {
   "Value": "om-insights-file-uploads-dev"
  },
  "LambdaRoleArn": {
   "Value": {
    "Fn::GetAtt": [
     "LambdaExecutionRoleD5C26073",
     "Arn"
    ]
   }
  },
  "FileMetadataTableName": {
   "Value": "om-insights-file-metadata"
  },
  "ExportsOutputFnGetAttLambdaExecutionRoleD5C26073ArnADAF6607": {
   "Value": {
    "Fn::GetAtt": [
     "LambdaExecutionRoleD5C26073",
     "Arn"
    ]
   },
   "Export": {
    "Name": "OmInsightsBaseInfraStack:ExportsOutputFnGetAttLambdaExecutionRoleD5C26073ArnADAF6607"
   }
  },
  "ExportsOutputRefworkerqueueQueueAD4DD13CB063E749": {
   "Value": {
    "Ref": "workerqueueQueueAD4DD13C"
   },
   "Export": {
    "Name": "OmInsightsBaseInfraStack:ExportsOutputRefworkerqueueQueueAD4DD13CB063E749"
   }
  },
  "ExportsOutputRefinventoryqueueQueue8D928AA894D4F742": {
   "Value": {
    "Ref": "inventoryqueueQueue8D928AA8"
   },
   "Export": {
    "Name": "OmInsightsBaseInfraStack:ExportsOutputRefinventoryqueueQueue8D928AA894D4F742"
   }
  },
  "ExportsOutputRefmarketingqueueQueueA6E57B2347804BBC": {
   "Value": {
    "Ref": "marketingqueueQueueA6E57B23"
   },
   "Export": {
    "Name": "OmInsightsBaseInfraStack:ExportsOutputRefmarketingqueueQueueA6E57B2347804BBC"
   }
  },
  "ExportsOutputRefOmInsightsEFSOmInsightsEFSAccessPointDB985D49ED8F8D91": {
   "Value": {
    "Ref": "OmInsightsEFSOmInsightsEFSAccessPointDB985D49"
   },
   "Export": {
    "Name": "OmInsightsBaseInfraStack:ExportsOutputRefOmInsightsEFSOmInsightsEFSAccessPointDB985D49ED8F8D91"
   }
  },
  "ExportsOutputRefOmInsightsVpcPrivateSubnetSubnet1Subnet317F70B858AB199A": {
   "Value": {
    "Ref": "OmInsightsVpcPrivateSubnetSubnet1Subnet317F70B8"
   },
   "Export": {
    "Name": "OmInsightsBaseInfraStack:ExportsOutputRefOmInsightsVpcPrivateSubnetSubnet1Subnet317F70B858AB199A"
   }
  },
  "ExportsOutputRefOmInsightsVpcPrivateSubnetSubnet2Subnet1A061DE56D1A3040": {
   "Value": {
    "Ref": "OmInsightsVpcPrivateSubnetSubnet2Subnet1A061DE5"
   },
   "Export": {
    "Name": "OmInsightsBaseInfraStack:ExportsOutputRefOmInsightsVpcPrivateSubnetSubnet2Subnet1A061DE56D1A3040"
   }
  },
  "ExportsOutputFnGetAttLambdaEfsSecurityGroup587B1078GroupId4385B065": {
   "Value": {
    "Fn::GetAtt": [
     "LambdaEfsSecurityGroup587B1078",
     "GroupId"
    ]
   },
   "Export": {
    "Name": "OmInsightsBaseInfraStack:ExportsOutputFnGetAttLambdaEfsSecurityGroup587B1078GroupId4385B065"
   }
  },
  "ExportsOutputFnGetAttgunturfreefileprocessingqueue013B758AArn7DABB771": {
   "Value": {
    "Fn::GetAtt": [
     "gunturfreefileprocessingqueue013B758A",
     "Arn"
    ]
   },
   "Export": {
    "Name": "OmInsightsBaseInfraStack:ExportsOutputFnGetAttgunturfreefileprocessingqueue013B758AArn7DABB771"
   }
  },
  "ExportsOutputFnGetAttgunturbasicfileprocessingqueueDD925984Arn768269D3": {
   "Value": {
    "Fn::GetAtt": [
     "gunturbasicfileprocessingqueueDD925984",
     "Arn"
    ]
   },
   "Export": {
    "Name": "OmInsightsBaseInfraStack:ExportsOutputFnGetAttgunturbasicfileprocessingqueueDD925984Arn768269D3"
   }
  },
  "ExportsOutputFnGetAttgunturprofileprocessingqueueD00D3A7BArn3985E2BC": {
   "Value": {
    "Fn::GetAtt": [
     "gunturprofileprocessingqueueD00D3A7B",
     "Arn"
    ]
   },
   "Export": {
    "Name": "OmInsightsBaseInfraStack:ExportsOutputFnGetAttgunturprofileprocessingqueueD00D3A7BArn3985E2BC"
   }
  },
  "ExportsOutputFnGetAtthyderabadfreefileprocessingqueue3A00BCF4Arn77035C74": {
   "Value": {
    "Fn::GetAtt": [
     "hyderabadfreefileprocessingqueue3A00BCF4",
     "Arn"
    ]
   },
   "Export": {
    "Name": "OmInsightsBaseInfraStack:ExportsOutputFnGetAtthyderabadfreefileprocessingqueue3A00BCF4Arn77035C74"
   }
  },
  "ExportsOutputFnGetAtthyderabadbasicfileprocessingqueue9875EC22Arn86A49502": {
   "Value": {
    "Fn::GetAtt": [
     "hyderabadbasicfileprocessingqueue9875EC22",
     "Arn"
    ]
   },
   "Export": {
    "Name": "OmInsightsBaseInfraStack:ExportsOutputFnGetAtthyderabadbasicfileprocessingqueue9875EC22Arn86A49502"
   }
  },
  "ExportsOutputFnGetAtthyderabadprofileprocessingqueue7D5667DBArn601101D2": {
   "Value": {
    "Fn::GetAtt": [
     "hyderabadprofileprocessingqueue7D5667DB",
     "Arn"
    ]
   },
   "Export": {
    "Name": "OmInsightsBaseInfraStack:ExportsOutputFnGetAtthyderabadprofileprocessingqueue7D5667DBArn601101D2"
   }
  },
  "ExportsOutputFnGetAttvizagfreefileprocessingqueueD0210276ArnC2FCF51F": {
   "Value": {
    "Fn::GetAtt": [
     "vizagfreefileprocessingqueueD0210276",
     "Arn"
    ]
   },
   "Export": {
    "Name": "OmInsightsBaseInfraStack:ExportsOutputFnGetAttvizagfreefileprocessingqueueD0210276ArnC2FCF51F"
   }
  },
  "ExportsOutputFnGetAttvizagbasicfileprocessingqueue4C9E4F98ArnCE45E46A": {
   "Value": {
    "Fn::GetAtt": [
     "vizagbasicfileprocessingqueue4C9E4F98",
     "Arn"
    ]
   },
   "Export": {
    "Name": "OmInsightsBaseInfraStack:ExportsOutputFnGetAttvizagbasicfileprocessingqueue4C9E4F98ArnCE45E46A"
   }
  },
  "ExportsOutputFnGetAttvizagprofileprocessingqueue5554C3DFArn6AA67563": {
   "Value": {
    "Fn::GetAtt": [
     "vizagprofileprocessingqueue5554C3DF",
     "Arn"
    ]
   },
   "Export": {
    "Name": "OmInsightsBaseInfraStack:ExportsOutputFnGetAttvizagprofileprocessingqueue5554C3DFArn6AA67563"
   }
  },
  "ExportsOutputFnGetAttworkerqueueQueueAD4DD13CArn3D54921B": {
   "Value": {
    "Fn::GetAtt": [
     "workerqueueQueueAD4DD13C",
     "Arn"
    ]
   },
   "Export": {
    "Name": "OmInsightsBaseInfraStack:ExportsOutputFnGetAttworkerqueueQueueAD4DD13CArn3D54921B"
   }
  },
  "ExportsOutputFnGetAttinventoryqueueQueue8D928AA8ArnB1F9A74C": {
   "Value": {
    "Fn::GetAtt": [
     "inventoryqueueQueue8D928AA8",
     "Arn"
    ]
   },
   "Export": {
    "Name": "OmInsightsBaseInfraStack:ExportsOutputFnGetAttinventoryqueueQueue8D928AA8ArnB1F9A74C"
   }
  },
  "ExportsOutputFnGetAttmarketingqueueQueueA6E57B23ArnF406DDCB": {
   "Value": {
    "Fn::GetAtt": [
     "marketingqueueQueueA6E57B23",
     "Arn"
    ]
   },
   "Export": {
    "Name": "OmInsightsBaseInfraStack:ExportsOutputFnGetAttmarketingqueueQueueA6E57B23ArnF406DDCB"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}